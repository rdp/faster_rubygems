A helper gem to dramatically speedup the time it takes to startup a ruby script.

i.e. it makes it so that requiring rubygems no longer takes as long.

Speed difference (a demo gem script, ruby 1.8 windows mingw):

normal rubygems:

  $ timer ruby whichr
  0.83

with faster_rubygems:

  $ timer ruby whichr
  0.19

Yea!

It acts as a beefed up version of gem_prelude (prelude is 1.9 only currently), but only adds load paths on demand.

It makes even more of a difference when used with 1.9:

normal rubygems:

  $ timer ruby whichr
  3.8s

with faster_rubygems:

  $ timer ruby whichr
  0.24s

== installation ==

$ gem install faster_rubygems

1.9
:
  $ export RUBYOPT=-rfaster_rubygems --disable-gems

1.8:

  you currently have to install to override normal rubygems by doing the following (in an irb session):

  >> require 'rubygems'
  >> require 'faster_rubygems/override' # installs faster_rubygems to be use in place of normal rubygems when you do a "require 'rubygems'" so you don't have to worry about anything

  # later, to revert this override, back to normal rubygems, should you so desire, do the following:
  >> require 'rubygems'
  >> require 'faster_rubygems/unoverride'

  If all else fails in this process (it has typically worked fine), you can 
  reinstall normal rubygems by downloading its package (.tgz) and running ruby setup.rb within it.

After installation, usage is automatic.

Note that it still loads full rubygems when it necessary (like when installing gems).  This is also automatic.
Most of the credit for this goes to gem prelude.

== Related projects ==

rubygems (of course)
http://github.com/fabien/minigems/tree/master
1.9's gem_prelude
http://www.ruby-forum.com/topic/191673
the Builder gem

Source/feedback:

http://www.github.com/rdp/faster_rubygems